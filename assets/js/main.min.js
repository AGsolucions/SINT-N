import{initMap as e,refreshMapData as t,getMapInstance as n}from"./map.js";import{initCharts as o,drawTimelineChart as r,updateKPIs as s}from"./charts.js";import{popupHTML as a}from"./popup.js";import{computeEstatus as i,download as l}from"./utils.js";import{getFilterValues as c}from"./filters.js";import{EXTENDED_FIELDS as d}from"./config_extended.js";import{renderFilters as u}from"./ui.js";import{renderZoneCards as m}from"./zones.js";let p=null;function f(e){return Array.isArray(e)?e.map(e=>f(e)).join(", "):"true"===e?"Sí":"false"===e?"No":!0===e?"Sí":!1===e?"No":null==e||""===e?"—":"string"==typeof e?e.charAt(0).toUpperCase()+e.slice(1):"number"==typeof e?(new Intl.NumberFormat).format(e):e instanceof Date?e.toLocaleDateString("es-ES"):String(e)}function h(e){const t=document.getElementById("carouselTrack"),n=document.getElementById("carouselDots");if(!t||!n)return;t.innerHTML="",n.innerHTML="";const o=[];e.forEach(e=>{(function(e){const t=e.properties||{},n=t.nombre||"(Sin nombre)",o=Array.from(new Set(d.map(e=>e.section))),r=[];for(const e of o){const o=d.filter(t=>t.section===e).map(e=>{const n=f(t[e.key]);return"—"===n||""===n||null==n?"":`\n          <div class="row">\n            <div class="k">${e.label}</div>\n            <div class="v" title="${String(n)}">${n}</div>\n          </div>`}).filter(Boolean).join("");if(!o.trim())continue;const s=document.createElement("div");s.className="slide",s.innerHTML=`\n      <div class="biz-card">\n        <div class="biz-title" title="${n}">${n}</div>\n        <div class="biz-subtitle">${e}</div>\n        <div class="biz-rows">${o}</div>\n      </div>`,r.push(s)}if(!r.length){const e=document.createElement("div");e.className="slide",e.innerHTML=`\n      <div class="biz-card">\n        <div class="biz-title" title="${n}">${n}</div>\n        <div class="biz-subtitle">Información</div>\n        <div class="biz-rows">\n          <div class="row"><div class="k">—</div><div class="v">Sin datos</div></div>\n        </div>\n      </div>`,r.push(e)}return r})(e).forEach(e=>o.push(e))}),o.forEach((e,o)=>{t.appendChild(e);const r=document.createElement("button");r.addEventListener("click",()=>g(o)),n.appendChild(r)}),g(0)}function y(e){const n=e.target.files[0];n&&Papa.parse(n,{header:!0,skipEmptyLines:!0,complete:e=>{const n=function(e){const t=[];for(const n of e){const e=parseFloat(n.lon),o=parseFloat(n.lat);if(!isFinite(e)||!isFinite(o))continue;const r={};d.forEach(e=>{"number"===e.type?r[e.key]=parseFloat(n[e.key])||null:"boolean"===e.type?r[e.key]="true"===n[e.key]||"1"===n[e.key]||"sí"===n[e.key]:"multiselect"===e.type?r[e.key]=n[e.key]?.split(/[;,|]/).map(e=>e.trim()).filter(Boolean)||[]:r[e.key]=n[e.key]??null}),r.estatus=i(r),t.push({type:"Feature",properties:r,geometry:{type:"Point",coordinates:[e,o]}})}return{type:"FeatureCollection",features:t}}(e.data);n&&n.features.length?(p=n,window.getRawData=()=>p,t(),j()):alert("CSV vacío o mal estructurado")},error:e=>alert("Error al leer CSV: "+e.message)})}document.addEventListener("DOMContentLoaded",()=>{u(),e(()=>{o(),window.addEventListener("business-clicked",e=>{h([e.detail])});const e=document.getElementById("csvInput");e&&e.addEventListener("change",y);const t=document.getElementById("btnGeoJSON");t&&t.addEventListener("click",b);const n=document.getElementById("btnCSV");n&&n.addEventListener("click",S);const r=document.getElementById("btnReport");r&&r.addEventListener("click",I);const s=document.getElementById("btnClearImported");s&&s.addEventListener("click",$);const a=document.getElementById("btnClearFilters");a&&a.addEventListener("click",L)});const t=document.getElementById("nextButton"),n=document.getElementById("prevButton");t&&t.addEventListener("click",E),n&&n.addEventListener("click",_)});let v=0;function g(e){const t=document.getElementById("carouselTrack"),n=Array.from(t.children),o=document.getElementById("carouselDots"),r=o?Array.from(o.children):[];if(!n.length)return v=0,t&&(t.style.transform="translateX(0%)"),void(r.length&&r.forEach(e=>e.classList.remove("active")));v=(e+n.length)%n.length,n.forEach((e,t)=>{e.classList.toggle("active",t===v),t===v?e.classList.add("fade-in"):e.classList.remove("fade-in")}),t.style.transform=`translateX(-${100*v}%)`,r.forEach((e,t)=>e.classList.toggle("active",t===v))}function E(){g(v+1)}function _(){g(v-1)}function b(){const e=k();l("negocios_filtrados.geojson",JSON.stringify(e,null,2),"application/json")}function S(){const e=k(),t=d.map(e=>e.key).concat(["lon","lat"]),n=e.features.map(e=>{const t=d.map(t=>{const n=e.properties[t.key];return Array.isArray(n)?`"${n.join(";")}"`:`"${(n??"").toString().replace(/"/g,'""')}"`}),[n,o]=e.geometry.coordinates;return t.push(n,o),t.join(",")}),o=[t.join(","),...n].join("\n");l("negocios_filtrados.csv",o,"text/csv")}function k(){try{const e=n(),t=e&&e.getSource&&e.getSource("negocios");if(t&&t._data)return t._data}catch(e){}return p||{type:"FeatureCollection",features:[]}}function I(){const e=k(),t=c(),n=(new Date).toLocaleString(),o=e.features.slice(0,20),r=`\n<!DOCTYPE html>\n<html lang="es">\n<head>\n  <meta charset="UTF-8">\n  <title>Informe SINT-NU</title>\n  <style>\n    body { font-family: sans-serif; padding: 20px; max-width: 900px; margin: auto; }\n    h1 { font-size: 20px; }\n    table { border-collapse: collapse; width: 100%; margin: 12px 0; }\n    th, td { border: 1px solid #ddd; padding: 6px; font-size: 12px; }\n    .muted { color: #6b7280; font-size: 12px; }\n  </style>\n</head>\n<body>\n  <h1>Informe SINT-NU (prototipo)</h1>\n  <div class="muted">Generado: ${n}</div>\n  <h2>Resumen</h2>\n  <p>Registros visibles (tras filtros): <strong>${e.features.length}</strong></p>\n  <h2>Filtros aplicados</h2>\n  <pre>${JSON.stringify(t,null,2)}</pre>\n  <h2>Muestra de resultados (primeros 20)</h2>\n  <table>\n    <thead>\n      <tr><th>Nombre</th><th>Estatus</th><th>Rubro</th><th>RUC</th><th>Patente</th><th>Ventas Factura</th><th>Clientes Factura</th></tr>\n    </thead>\n    <tbody>\n      ${o.map(e=>{const t=e.properties;return`<tr>\n          <td>${t.nombre}</td>\n          <td>${t.estatus}</td>\n          <td>${t.rubro}</td>\n          <td>${t.tiene_ruc?"Sí":"No"}</td>\n          <td>${t.tiene_patente?"Sí":"No"}</td>\n          <td>${t.porc_ventas_con_factura??"—"}</td>\n          <td>${t.porc_clientes_exigen_factura??"—"}</td>\n        </tr>`}).join("")}\n    </tbody>\n  </table>\n  <p class="muted">Este informe es generado desde el prototipo y refleja los datos filtrados al momento de exportar.</p>\n</body>\n</html>`;l("Informe_SINTNU.html",r,"text/html")}function $(){fetch("data/negocios.geojson").then(e=>e.json()).then(e=>{e.features.forEach(e=>e.properties.estatus=i(e.properties)),p=e,window.getRawData=()=>p,L(),t(),j(),h([]);const n=document.getElementById("csvInput");n&&(n.value="")})}function L(){document.querySelectorAll('input[type="text"]').forEach(e=>e.value="");document.querySelectorAll('input[type="number"]').forEach(e=>e.value="");document.querySelectorAll("select").forEach(e=>{e.value="__all__"});document.querySelectorAll("select[multiple]").forEach(e=>{Array.from(e.options).forEach(e=>{e.selected=!1})});document.querySelectorAll('select[id$="f_tiene_ruc"], select[id$="f_escritura"], select[id$="f_registro"], select[id$="f_tiene_patente"]').forEach(e=>{e.value="__all__"});const e=document.getElementById("f_canton"),t=document.getElementById("f_parroquia");if(e&&(e.value="__all__"),t){t.innerHTML="";const e=document.createElement("option");e.value="__all__",e.textContent="Todas",t.appendChild(e)}const n=document.getElementById("f_anio");n&&(n.value="__all__")}function j(){const e=k();e&&e.features&&(s(e),m(e))}