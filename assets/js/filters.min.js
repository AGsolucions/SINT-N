import{EXTENDED_FIELDS as e}from"./config_extended.min.js";import{parseBool as t,parseNum as r,normalize as n}from"./utils.js";export function getFilterValues(){const t=e=>document.querySelector(e),n={};for(const s of e){const e=t("#"+s.id);e&&("text"===s.type?n[s.key]=e.value.trim():"number"===s.type?n[s.key]=r(e.value):"boolean"===s.type||"select"===s.type?n[s.key]=e.value:"multiselect"===s.type&&(n[s.key]=Array.from(e.selectedOptions).map(e=>e.value)))}return n}const s=new Set(e.filter(e=>"select"===e.type&&Array.isArray(e.options)).filter(e=>e.options.some(e=>"true"===String(e.value)||"false"===String(e.value))).map(e=>e.key));export function featurePassesFilters(i,o){const l=i.properties||{};for(const i of e){const e=o[i.key];if(null==e||""===e||"__all__"===e)continue;const u=l[i.key];if("text"===i.type&&"string"==typeof e){const t=n(u||""),r=n(e);if(!t.startsWith(r))return!1}else if("number"===i.type){const t=r(u);if(null==t)return!1;if(i.key.endsWith("_min")&&t<e)return!1;if(i.key.endsWith("_max")&&t>e)return!1;if(!i.key.endsWith("_min")&&!i.key.endsWith("_max")&&t!==e)return!1}else if("select"===i.type)if(s.has(i.key)){if(t(u)!==t(e))return!1}else{if(n(u)!==n(e))return!1}else if("boolean"===i.type){if(t(u)!==t(e))return!1}else if("multiselect"===i.type){const t=Array.isArray(u)?u.map(e=>n(e)):[];for(const r of e)if(!t.includes(n(r)))return!1}}return!0}export function filterData(e){const t=getFilterValues();return{type:"FeatureCollection",features:e.features.filter(e=>featurePassesFilters(e,t))}}